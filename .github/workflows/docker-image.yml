name: OpenWebUI Auto-Sync

on:
  schedule:
    - cron: '0 0 * * *' # Exécution quotidienne
  repository_dispatch: # Déclenchement manuel via API
  push:
    branches:
      - 'main'
      - 'develop'

jobs:
  sync-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Configurer upstream
        run: |
          git remote add upstream https://github.com/open-webui/open-webui.git
          git fetch upstream

      - name: Fusionner les changements (résolution des conflits)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git merge upstream/main --no-commit --no-ff --allow-unrelated-histories || true

          # Liste des fichiers à conserver (overwrite conflicts)
          CUSTOM_FILES="\
            static/favicon.png\
            static/opensearch.xml\
            src/lib/constants.ts\
            backend/open_webui/static/favicon.ico\
            backend/open_webui/static/favicon.png\
            static/static/*\
            src/lib/components/layout/Sidebar/UserMenu.svelte\
            config.js\
            generate-config.sh\
            Dockerfile\
            src/app.html\
            update_ollama_models.sh\
          "

          # Appliquer "ours" (conserver la version locale) pour les fichiers personnalisés
          for file in $CUSTOM_FILES; do
            if [[ -d "$file" ]]; then
              # Si c'est un répertoire, checkout tous les fichiers à l'intérieur
              find "$file" -type f -print0 | while IFS= read -r -d $'\0' f; do
                git checkout --ours "$f"
                git add "$f"
              done
            else
              git checkout --ours "$file"
              git add "$file"
            fi
          done

          # Accepter les modifications de "theirs" (upstream) pour les autres fichiers
          git ls-files -u | cut -d ' ' -f 2 | while read -r conflicted_file; do
            echo "Résolution du conflit pour $conflicted_file en utilisant 'theirs'"
            git checkout --theirs "$conflicted_file"
            git add "$conflicted_file"
          done

          # Tentative de commit, même si des conflits persistent (sera géré plus loin)
          git commit -m "Merge upstream + préservation des fichiers personnalisés" || true

          git push origin main
